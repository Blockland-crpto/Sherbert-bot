const { AttachmentBuilder, EmbedBuilder } = require('discord.js');
const { embedColor, embedAuthorName } = require('./config.json');
const path = require('node:path');

class SherbertBotEmbedErrorPage {
	constructor(errorName, errorCode, errorMsg, interaction) {
		const resImgPath = path.join(__dirname, 'commands/assets/imgs/erroricon.png');
		const errorIconFile = new AttachmentBuilder(resImgPath);
		const errorEmbed = new EmbedBuilder()
			.setColor(embedColor)
			.setTitle('Bug Report')
			.setAuthor({ name: embedAuthorName })
			.setDescription('Were sorry, but a error occured, please try again later, heres is some log info')
			.setThumbnail('attachment://erroricon.png')
			.addFields(
				{ name: 'Error name', value: `${errorName}` },
				{ name: 'Error code', value: `${errorCode}` },
				{ name: 'Error message', value: `${errorMsg}` },
				{ name: 'SherbertBot Version', value: '1.0.0 Alpha' },
			)
			.setTimestamp()
			.setFooter({ text: 'Generated by SherbertBot Version 1.0.0' });

		if (interaction.isRepliable()) {
			interaction.reply({ embeds: [errorEmbed], files: [errorIconFile], ephemeral: true });
			return;
		}
		else {
			interaction.followUp({ embeds: [errorEmbed], files: [errorIconFile], ephemeral: true });
			return;
		}
	}
}
exports.SherbertBotEmbedErrorPage = SherbertBotEmbedErrorPage;

class SherbertBotEmbedWarnPage {
	constructor(warnMsg, interaction) {
		const resImgPath = path.join(__dirname, 'commands/assets/imgs/erroricon.png');
		const warnIconFile = new AttachmentBuilder(resImgPath);
		const warnEmbed = new EmbedBuilder()
			.setColor(embedColor)
			.setTitle('Warning')
			.setAuthor({ name: embedAuthorName })
			.setDescription(warnMsg)
			.setThumbnail('attachment://erroricon.png')
			.setTimestamp()
			.setFooter({ text: 'Generated by SherbertBot Version 1.0.0' });

		if (interaction.isRepliable()) {
			return interaction.reply({ embeds: [warnEmbed], files: [warnIconFile], ephemeral: true });
			
		}
		else {
			return interaction.followUp({ embeds: [warnEmbed], files: [warnIconFile], ephemeral: true });
			
		}
	}
}
exports.SherbertBotEmbedWarnPage = SherbertBotEmbedWarnPage;
